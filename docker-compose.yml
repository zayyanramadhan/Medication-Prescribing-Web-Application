services:
  # MySQL Service
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: medic
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: my_secret_password
      MYSQL_LOG_CONSOLE: "true"
      MYSQL_LOG_ERROR_VERBOSITY: "3"
      MYSQL_ROOT_HOST: "%"
      MYSQL_INITDB_SKIP_TZINFO: "true"
    command: --init-file /docker-entrypoint-initdb.d/init.sql
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"  # Add this line to expose MySQL port
    networks:
      - laravel

  # PHP Service (with Laravel)
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel
    command: >
      sh -c "
      chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache &&
      chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache &&
      php artisan config:clear &&
      php artisan config:clear &&
      php artisan view:clear &&
      php artisan cache:clear &&
      php-fpm
      "

  # Nginx Service
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel
      
# Volumes for persistent data
volumes:
  mysql_data:

# Network for inter-service communication
networks:
  laravel:
